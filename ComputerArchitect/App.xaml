<Application x:Class="ComputerArchitect.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:ComputerArchitect"
             StartupUri="MainWindow.xaml">
    
    <Application.Resources>
        <!-- Стиль кнопки сворачивания приложения  -->
        <Style x:Key="TrayAppButton" TargetType="Button">

            <Setter Property="Template">

                <Setter.Value>
                    <ControlTemplate TargetType="Button">

                        <Border Name="border" 
                BorderThickness="0"
                BorderBrush="#635643" 
                CornerRadius="0"
                Background="{TemplateBinding Background}"
                >

                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#635643" />
                                <Setter TargetName="border" Property="Background" Value="#706A6A" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Стиль кнопки закрытия приложения  -->
        <Style x:Key="CloseAppButton" TargetType="Button">

            <Setter Property="Template">

                <Setter.Value>
                    <ControlTemplate TargetType="Button">

                        <Border Name="border" 
                BorderThickness="0"
                BorderBrush="#635643" 
                CornerRadius="0"
                Background="{TemplateBinding Background}"
                >

                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#635643" />
                                <Setter TargetName="border" Property="Background" Value="#8C5252" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Стиль кнопки авторизации/регистрации  -->
        <Style x:Key="SimpleButton" TargetType="Button">
            <Setter Property="Height" Value="45"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="#D6D6D6"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Background" Value="#5B5C62"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="White" Opacity="0" Direction="320" ShadowDepth="1" BlurRadius="50"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" CornerRadius="3" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Применяем цвета фона в зависимости от доступности кнопки -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="#5B5C62"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#518EBA"/>
                            </Trigger>
                            <!-- Применяем эффект при наведении на кнопку -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect Color="#518EBA" Opacity="0.3" Direction="600" ShadowDepth="6" BlurRadius="67"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="border" Property="BorderBrush" Value="#6A6B70"/>
                                <Setter TargetName="border" Property="Background" Value="#518EBA"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Стиль пассвордбоксов  -->
        <Style x:Key="SimplePasswordBox" TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource {x:Type PasswordBox}}">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="#FFF9F0"/>
            <Setter Property="BorderThickness" Value="0.7"/>
            <Setter Property="BorderBrush" Value="#D6D6D6"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="Background" Value="#393A41" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Border x:Name="border"
                        Padding="8 14 0 0"
                                CornerRadius="3"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                            <Grid>
                                <ScrollViewer x:Name="PART_ContentHost" />
                                <TextBlock x:Name="textBlock"
                                   Margin="2,0,0,0"
                                   Foreground="{TemplateBinding BorderBrush}"
                                   IsHitTestVisible="False"
                                   Text="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"
                                   Visibility="Collapsed" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Opacity" Value="1" />
                                
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF7EB4EA" />
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF569DE5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Стиль текстбоксов  -->
        <Style x:Key="SimpleTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="TextAlignment" Value="Left"/>
            <Setter Property="Foreground" Value="#FFF9F0"/>
            <Setter Property="BorderThickness" Value="0.7"/>
            <Setter Property="BorderBrush" Value="#D6D6D6"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="Background" Value="#393A41" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border"
                        Padding="8 13.7 0 0"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                            <Grid>
                                <ScrollViewer x:Name="PART_ContentHost" />
                                <TextBlock x:Name="textBlock"
                                   Margin="2,0,0,0"
                                   Foreground="#6A6B70"
                                   IsHitTestVisible="False"
                                   Text="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"
                                   Visibility="Collapsed" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Text" Value="">
                                <Setter TargetName="textBlock" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Opacity" Value="0.56" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF7EB4EA" />
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF569DE5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Стиль текстбока номер телефона  -->
        <Style x:Key="PhoneNumberTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="TextAlignment" Value="Left"/>
            <Setter Property="Foreground" Value="#FFF9F0"/>
            <Setter Property="BorderThickness" Value="0.7"/>
            <Setter Property="BorderBrush" Value="#D6D6D6"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="Background" Value="#393A41" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border"
                Padding="28 15 0 0"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="True">
                            <Grid>
                                <ScrollViewer x:Name="PART_ContentHost" />
                                <TextBlock x:Name="textBlock"
                           Margin="2,0,0,0"
                           Foreground="#6A6B70"
                           IsHitTestVisible="False"
                           Text="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"
                           Visibility="Collapsed" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Text" Value="">
                                <Setter TargetName="textBlock" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Opacity" Value="0.56" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF7EB4EA" />
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF569DE5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Стиль чекбокса  -->
        <Style x:Key="SimpleCheckBoxStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="IsChecked" Value="False"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#999"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Border Width="25" Height="25" CornerRadius="3" Background="{TemplateBinding Background}" >
                            <Grid>
                                <Border x:Name="border" Width="14" Height="14" CornerRadius="3" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="3 0" Background="Transparent">
                                    <Border.RenderTransform>
                                        <TranslateTransform  X="0"/>
                                    </Border.RenderTransform>
                                </Border>
                                <TextBlock x:Name="txt" Text="{TemplateBinding Content}" Margin="4.6 -1 0 0" VerticalAlignment="Center" Foreground="White" >
                                    <TextBlock.RenderTransform>
                                        <TranslateTransform   X="0"></TranslateTransform>
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Text" TargetName="txt" Value="{Binding Tag,RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="0" Duration="00:00:0.2"/>
                                            <DoubleAnimation Storyboard.TargetName="txt" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="0" Duration="00:00:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="0" Duration="00:00:0.2"/>
                                            <DoubleAnimation Storyboard.TargetName="txt" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="0" Duration="00:00:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Text" TargetName="txt" Value="{Binding Content,RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>






        <!-- Стиль текста навигационного меню -->
        <Style x:Key="NavigationLabelStyleBlack" TargetType="Label">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="#D6D6D6"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="Padding" Value="0 25 0 0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Label">
                        <Border BorderThickness="0 0 0 3" BorderBrush="Transparent" CornerRadius="0" Name="border" Background="Transparent">
                            <ContentPresenter Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#D6D6D6"/>
                                <Setter TargetName="border" Property="BorderThickness" Value="0 0 0 3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Стиль кнопки раскрытия меню профиля пользователя -->
        <Style x:Key="ShowUserMenuButtonStyleBlack" TargetType="Button">
            <Setter Property="Template">

                <Setter.Value>
                    <ControlTemplate TargetType="Button">

                        <Border Name="border" 
                BorderThickness="0"
                BorderBrush="Transparent" 
                CornerRadius="5"
                Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderThickness" Value="1"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                                <Setter Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect Color="White" Opacity="0.5" Direction="3" ShadowDepth="0.1" BlurRadius="10"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Стиль кнопки раскрытия корзины пользователя -->
        <Style x:Key="BasketButtonStyleBlack" TargetType="Button">
            <Setter Property="Template">

                <Setter.Value>
                    <ControlTemplate TargetType="Button">

                        <Border Name="border" 
                                BorderThickness="2"
                                BorderBrush="Transparent" 
                                CornerRadius="5"
                                Background="Transparent">
                            <ContentPresenter/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                                <Setter TargetName="border" Property="Background" Value="#3D3D46"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="UserMenuButtonStyleBlack" TargetType="Button">
            <Setter Property="Template">

                <Setter.Value>
                    <ControlTemplate TargetType="Button">

                        <Border Name="border" 
                            BorderThickness="2"
                            BorderBrush="Transparent" 
                            CornerRadius="5"
                            Background="Transparent">
                            <ContentPresenter/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                                <Setter TargetName="border" Property="Background" Value="#42424B"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="UserInfoLabelStyle" TargetType="Label">
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="#D6D6D6"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Margin" Value="54 0 0 0"/>
        </Style>

        <Style x:Key="Simple2Button" TargetType="Button">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="#D6D6D6"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Background" Value="#5B5C62"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="White" Opacity="0" Direction="320" ShadowDepth="1" BlurRadius="50"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" CornerRadius="3" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Применяем цвета фона в зависимости от доступности кнопки -->
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#5B5C62"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="#518EBA"/>
                            </Trigger>
                            <!-- Применяем эффект при наведении на кнопку -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect Color="#518EBA" Opacity="0.3" Direction="600" ShadowDepth="6" BlurRadius="67"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="border" Property="BorderBrush" Value="#6A6B70"/>
                                <Setter TargetName="border" Property="Background" Value="#518EBA"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="UserInfoTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="TextAlignment" Value="Left"/>
            <Setter Property="Foreground" Value="#FFF9F0"/>
            <Setter Property="BorderThickness" Value="0.7"/>
            <Setter Property="BorderBrush" Value="#D6D6D6"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="Background" Value="#393A41" />
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border"
                        Padding="10 22 0 0"
                            
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                            <Grid>
                                <ScrollViewer x:Name="PART_ContentHost" />
                                <TextBlock x:Name="textBlock"
                                   Panel.ZIndex="2"
                                   Margin="0,-15,0,0"
                                   FontSize="12"
                                   Foreground="#6A6B70"
                                   IsHitTestVisible="False"
                                   Text="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"
                                   Visibility="Visible" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Text" Value="">
                                <Setter TargetName="textBlock" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Opacity" Value="0.56" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF7EB4EA" />
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF569DE5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        
        <Style x:Key="CustomRadioButtonStyle" TargetType="{x:Type RadioButton}">
            <Setter Property="Width" Value="20"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Background" Value="#D9D9D9"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Content" Value="Мужской"/>
            <!-- Default content for the TextBlock -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20"/>
                                <!-- RadioButton -->
                                <ColumnDefinition Width="Auto"/>
                                <!-- TextBlock -->
                            </Grid.ColumnDefinitions>
                            <Ellipse x:Name="BackgroundEllipse" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                            <Ellipse x:Name="InnerEllipse" Width="10" Height="10" Fill="#393A41" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed"/>
                            <TextBlock x:Name="Label" FontFamily="Arial" FontSize="18" Foreground="#D6D6D6" Margin="4,0,0,0" Text="{TemplateBinding Content}" Grid.Column="1"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="InnerEllipse" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="BackgroundEllipse" Property="Stroke" Value="#FF7EB4EA"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter TargetName="BackgroundEllipse" Property="Stroke" Value="transparent"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <Style x:Key="CustomRadio2ButtonStyle" TargetType="{x:Type RadioButton}">
            <Setter Property="Width" Value="20"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Background" Value="#D9D9D9"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Content" Value="Мужской"/>
            <!-- Default content for the TextBlock -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20"/>
                                <!-- RadioButton -->
                                <ColumnDefinition Width="Auto"/>
                                <!-- TextBlock -->
                            </Grid.ColumnDefinitions>
                            <Ellipse x:Name="BackgroundEllipse" Width="16" Height="16" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                            <Ellipse x:Name="InnerEllipse" Width="8" Height="8" Fill="#393A41" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed"/>
                            <TextBlock x:Name="Label" FontFamily="Arial" FontWeight="Bold" FontSize="16" Foreground="#D6D6D6" Margin="4,1,0,0" Text="{TemplateBinding Content}" Grid.Column="1"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="InnerEllipse" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="BackgroundEllipse" Property="Stroke" Value="#FF7EB4EA"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter TargetName="BackgroundEllipse" Property="Stroke" Value="transparent"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="Transparent" />
        <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="#393A41" />
        <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#D6D6D6" />
        <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
        <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />

        <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="2" Name="Border"
                        BorderBrush="{StaticResource ComboBoxNormalBorderBrush}" 
                        CornerRadius="3" BorderThickness="1, 1, 1, 1" 
                        Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
                <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="Transparent" Name="ButtonBorder"
                        CornerRadius="3" BorderThickness="0, 0, 0, 0" 
                        Background="{StaticResource ComboBoxNormalBackgroundBrush}" />

                <Path Name="Arrow" Grid.Column="1" 
                    Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                    HorizontalAlignment="Center" Fill="White"
                    VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="#518EBA"/>

                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="#6DB2E3"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="White"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                    <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="ComboBoxFlatStyle"  TargetType="{x:Type ComboBox}">
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="TextElement.Foreground" Value="#D6D6D6"/>
            <Setter Property="FontSize" Value="14" />

            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Grid.Column="2"
                                          ClickMode="Press" Focusable="False"
                                          IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                          Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                            <ContentPresenter Name="ContentSite" Margin="10, 3, 23, 3" IsHitTestVisible="False"
                      HorizontalAlignment="Left" VerticalAlignment="Center"                              
                      Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                      ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                            IsReadOnly="{TemplateBinding IsReadOnly}"
                            Visibility="Hidden" Background="Transparent"
                            HorizontalAlignment="Left" VerticalAlignment="Center"
                            Focusable="True" >
                                <TextBox.Template>
                                    <ControlTemplate TargetType="TextBox" >
                                        <Border Name="PART_ContentHost" Focusable="False" />
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>

                            <Popup Name="Popup" Placement="Bottom"
           Focusable="False" AllowsTransparency="True"
           IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
           PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True"
            MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
            MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                    <Border Name="DropDownBorder" Background="#42424B" 
                CornerRadius="3" BorderThickness="2,2,2,2" 
                BorderBrush="Transparent"/>
                                    <ScrollViewer  Margin="2" SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />

                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                            <Trigger Property="ComboBox.IsEditable" Value="True">
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="CatalogGridStyle" TargetType="Grid">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Background" Value="#4B4C52"/>
        </Style>

        <Style x:Key="CatalogImageStyle" TargetType="Image">
            <Setter Property="Width" Value="170"/>
            <Setter Property="Height" Value="170"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Margin" Value="0 20 0 0"/>
        </Style>

        <Style x:Key="CatalogLabelStyle" TargetType="Label">
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="Foreground" Value="#D6D6D6"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="0 0 0 43"/>
        </Style>
        <Style x:Key="CatalogBorderStyle" TargetType="Border">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#4B4C52"/>
            <Setter Property="Background" Value="#4B4C52"/>
            <Setter Property="CornerRadius" Value="5"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect ShadowDepth="0" BlurRadius="20" Color="Black" Opacity="0.3"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="BorderBrush" Value="White"/>
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect ShadowDepth="0" BlurRadius="20" Color="White" Opacity="0.3"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="TextBoxSearchInCategory" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="TextAlignment" Value="Left"/>
            <Setter Property="Foreground" Value="#FFF9F0"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="#D6D6D6"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="Background" Value="#4B4C52" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border"
                        Padding="8 16 0 0"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                            <Grid>
                                <ScrollViewer x:Name="PART_ContentHost" />
                                <TextBlock x:Name="textBlock"
                                   Margin="2,0,0,0"
                                   Foreground="#6A6B70"
                                   IsHitTestVisible="False"
                                   Text="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"
                                   Visibility="Collapsed" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Text" Value="">
                                <Setter TargetName="textBlock" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Opacity" Value="0.56" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF7EB4EA" />
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF569DE5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="Simple3Button" TargetType="Button">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="#D6D6D6"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Background" Value="#5B5C62"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" CornerRadius="3" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Применяем цвета фона в зависимости от доступности кнопки -->
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#5B5C62"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="#518EBA"/>
                            </Trigger>
                            <!-- Применяем эффект при наведении на кнопку -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#6A6B70"/>
                                <Setter TargetName="border" Property="Background" Value="#518EBA"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>




        <Style x:Key="ConfiguratorSelectedComponentLabel" TargetType="Label">
            <Setter Property="Foreground" Value="#D6D6D6"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="18"/>
        </Style>





    </Application.Resources>
</Application>
